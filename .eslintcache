[{"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\index.js":"1","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\App.js":"2","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\reportWebVitals.js":"3","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\HomeScreen\\HomeScreen.js":"4","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\ContextAPI\\GlobalState.js":"5","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\ContextAPI\\AppReducer.js":"6","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\HeaderBar.js":"7","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\GlobalStyle.js":"8","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\FeedBack\\FeedBack.js":"9","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\UseCase.js":"10","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\Files\\EditStudent.js":"11","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\Files\\AddStudents.js":"12","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Graph\\Graph.js":"13","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Graph\\Pie.js":"14","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\NewContext.js":"15","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\TheContext\\StateContext.js":"16","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\TheContext\\StateReducer.js":"17","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\TheHome.js":"18","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\AddCourse.js":"19","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\EditCourse.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":1376,"mtime":1613254882639,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1173,"mtime":1611922647956,"results":"25","hashOfConfig":"22"},{"size":1688,"mtime":1612354366576,"results":"26","hashOfConfig":"22"},{"size":1065,"mtime":1612097108974,"results":"27","hashOfConfig":"22"},{"size":1146,"mtime":1613254890621,"results":"28","hashOfConfig":"22"},{"size":205,"mtime":1612389131950,"results":"29","hashOfConfig":"22"},{"size":132,"mtime":1611916828355,"results":"30","hashOfConfig":"22"},{"size":1576,"mtime":1612353134909,"results":"31","hashOfConfig":"22"},{"size":1995,"mtime":1612353351223,"results":"32","hashOfConfig":"22"},{"size":1677,"mtime":1612083875052,"results":"33","hashOfConfig":"22"},{"size":2268,"mtime":1612940801650,"results":"34","hashOfConfig":"22"},{"size":2648,"mtime":1613159499139,"results":"35","hashOfConfig":"22"},{"size":1015,"mtime":1613256312461,"results":"36","hashOfConfig":"22"},{"size":1442,"mtime":1613261697005,"results":"37","hashOfConfig":"22"},{"size":736,"mtime":1613261195304,"results":"38","hashOfConfig":"22"},{"size":1059,"mtime":1613257052597,"results":"39","hashOfConfig":"22"},{"size":1312,"mtime":1613259642013,"results":"40","hashOfConfig":"22"},{"size":1679,"mtime":1613260778532,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"lh5qqx",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\index.js",[],["89","90"],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\App.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\reportWebVitals.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\HomeScreen\\HomeScreen.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\ContextAPI\\GlobalState.js",["91"],"import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport { AppReducer } from \"./AppReducer\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst initState = {\r\n  students: localStorage.getItem(\"students\")\r\n    ? JSON.parse(localStorage.getItem(\"students\"))\r\n    : [],\r\n\r\n  // students: [\r\n  //   { id: uuid(), name: \"Peter\" },\r\n  //   { id: uuid(), name: \"Bukky\" },\r\n  //   { id: uuid(), name: \"Ubani\" },\r\n  //   { id: uuid(), name: \"Ndidi\" },\r\n  // ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"students\", JSON.stringify(state.students));\r\n  }, [state]);\r\n\r\n  //Action for Adding Students to our DataBase\r\n\r\n  const addStudent = (student) => {\r\n    dispatch({\r\n      type: \"ADD_STUDENT\",\r\n      payload: student,\r\n    });\r\n  };\r\n\r\n  //Removal Action\r\n  const removeStudent = (id) => {\r\n    dispatch({\r\n      type: \"REMOVE_STUDENT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  //Action for Reducing\r\n  const editingStudents = (student) => {\r\n    dispatch({\r\n      type: \"EDIT_STUDENT\",\r\n      payload: student,\r\n    });\r\n  };\r\n\r\n  //Action for Complete\r\n  const completeStudents = (id) => {\r\n    dispatch({\r\n      type: \"COMPLETE_STUDENT\",\r\n      payload: id,\r\n    });\r\n  };\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        std: state.students,\r\n        addStudent,\r\n        removeStudent,\r\n        editingStudents,\r\n        complete: completeStudents,\r\n        // complete: state.student.complete,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\ContextAPI\\AppReducer.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\HeaderBar.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\GlobalStyle.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\FeedBack\\FeedBack.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\UseCase.js",["92"],"import { Button } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../ContextAPI/GlobalState\";\r\nimport \"./UseCase.css\";\r\n\r\nconst UseCase = () => {\r\n  const { std, removeStudent, completeStudents, complete } = useContext(\r\n    GlobalContext\r\n  );\r\n  return (\r\n    <div>\r\n      <center\r\n        style={{\r\n          marginBottom: \"70px\",\r\n        }}\r\n      >\r\n        This is the Use case\r\n      </center>\r\n      <center>\r\n        {std.map(({ id, name }) => (\r\n          <div className=\"useCase\">\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <div\r\n                style={{\r\n                  marginLeft: \"20px\",\r\n                  color: complete ? \"black\" : \"red\",\r\n                }}\r\n              >\r\n                {name}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <Button className=\"useCase__Button\">\r\n                <Link\r\n                  to={`/student/${id}`}\r\n                  // onClick={() => {\r\n                  //   completeStudents(std.id);\r\n                  // }}\r\n                >\r\n                  Edit\r\n                </Link>\r\n              </Button>\r\n              <Button\r\n                className=\"useCase__Button1\"\r\n                onClick={() => {\r\n                  removeStudent(id);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseCase;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\Files\\EditStudent.js",["93"],"import { Button } from \"antd\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../ContextAPI/GlobalState\";\r\nimport \"./File.css\";\r\nconst EditStudent = (props) => {\r\n  const { std, editingStudents } = useContext(GlobalContext);\r\n\r\n  const hist = useHistory();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [selectedStudent, setSelectStudent] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const currentID = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    const studentID = currentID;\r\n    const selectedStudent = std.find((student) => student.id === studentID);\r\n    setSelectStudent(selectedStudent);\r\n  }, [currentID, std]);\r\n  return (\r\n    <div>\r\n      <center\r\n        style={{\r\n          marginTop: \"40px\",\r\n          marginBottom: \"50px\",\r\n        }}\r\n      >\r\n        Edit Students\r\n      </center>\r\n      <center>\r\n        <div>\r\n          <input\r\n            className=\"edit\"\r\n            placeholder=\"Edit Name\"\r\n            value={selectedStudent.name}\r\n            name=\"name\"\r\n            onChange={(e) => {\r\n              setSelectStudent({\r\n                ...selectedStudent,\r\n                [e.target.name]: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <div>\r\n            <Button className=\"useCase__Button\">\r\n              <Link\r\n                onClick={() => {\r\n                  editingStudents(selectedStudent);\r\n                  hist.push(\"/usecase\");\r\n                }}\r\n              >\r\n                Edit\r\n              </Link>\r\n            </Button>\r\n            <Button className=\"useCase__Button1\">\r\n              <Link\r\n                onClick={() => {\r\n                  hist.push(\"/usecase\");\r\n                }}\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditStudent;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Component\\UseCase\\Files\\AddStudents.js",["94","95"],"import { Button } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../ContextAPI/GlobalState\";\r\nimport \"./File.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst AddStudent = () => {\r\n  const hist = useHistory();\r\n  const [input, setInput] = React.useState(\"\");\r\n  const { addStudent, std } = useContext(GlobalContext);\r\n\r\n  const addingNewStudent = () => {\r\n    const newStudent = {\r\n      id: uuid(),\r\n      name: input,\r\n    };\r\n\r\n    addStudent({ id: uuid(), name: input });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center\r\n        style={{\r\n          marginTop: \"40px\",\r\n          marginBottom: \"50px\",\r\n        }}\r\n      >\r\n        Add Students\r\n      </center>\r\n      <center>\r\n        <div>\r\n          <input\r\n            className=\"edit\"\r\n            placeholder=\"Add Name\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n          />\r\n          <div>\r\n            <Button className=\"useCase__Button\">\r\n              <Link\r\n                onClick={() => {\r\n                  addingNewStudent();\r\n                  hist.push(\"/usecase\");\r\n                }}\r\n              >\r\n                Accept\r\n              </Link>\r\n            </Button>\r\n            <Button className=\"useCase__Button1\">\r\n              <Link\r\n                onClick={() => {\r\n                  hist.push(\"/usecase\");\r\n                }}\r\n              >\r\n                Cancel\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Graph\\Graph.js",["96","97"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  line,\r\n  select,\r\n  axisBottom,\r\n  axisRight,\r\n  scaleLinear,\r\n  curveCardinal,\r\n} from \"d3\";\r\nimport axios from \"axios\";\r\nimport Pie from \"./Pie\";\r\n\r\nconst Graph = () => {\r\n  const svgRef = useRef();\r\n  const [data, setData] = useState([0, 12, 60, 25, 50, 48, 75]);\r\n  const [data1, setData1] = useState([]);\r\n  const age = [];\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios.get(\r\n        \"http://dummy.restapiexample.com/api/v1/employees\"\r\n      );\r\n      // console.log(res);\r\n\r\n      if (res) {\r\n        setData1(res.data.data);\r\n        console.log(data1);\r\n\r\n        for (const i of data1) {\r\n          age.push(parseInt(i.employee_age));\r\n        }\r\n      }\r\n      console.log(age);\r\n    };\r\n\r\n    const xScale = scaleLinear()\r\n      .domain([0, data.length - 1])\r\n      .range([0, 300]);\r\n    const yScale = scaleLinear().domain([0, 75]).range([150, 0]);\r\n\r\n    const xAxis = axisBottom(xScale)\r\n      .ticks(data.length)\r\n      .tickFormat((index) => index + 1);\r\n    const yAxis = axisRight(yScale);\r\n\r\n    const svg = select(svgRef.current);\r\n\r\n    // svg.select(xAxis).call(\".x-axis\");\r\n\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(150px)\").call(xAxis);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(300px)\").call(yAxis);\r\n\r\n    const newLine = line()\r\n      .x((value, index) => xScale(index))\r\n      .y(yScale)\r\n      .curve(curveCardinal);\r\n\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data([getData])\r\n      .join(\"path\")\r\n      .attr(\"class\", \"line\")\r\n      .attr(\"d\", (value) => newLine(value))\r\n      .attr(\"stroke\", \"red\")\r\n      .attr(\"fill\", \"none\");\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <center>The Drawing on the Browser</center>\r\n      <center>\r\n        <svg\r\n          ref={svgRef}\r\n          style={{\r\n            backgroundColor: \"lightgray\",\r\n            overflow: \"visible\",\r\n          }}\r\n        >\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </center>\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <center>Awesome</center>\r\n      <br />\r\n      <center>\r\n        <Pie />\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\Graph\\Pie.js",["98","99","100","101","102"],"import React from \"react\";\r\nimport { Doughnut, Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst data = {\r\n  labels: [\"Red\", \"Green\", \"Yellow\"],\r\n  datasets: [\r\n    {\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n    },\r\n  ],\r\n};\r\n\r\nconst newData = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(75,192,192,1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [65, 59, 80, 81, 56, 55, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Pie = () => {\r\n  const [dataSet, setDataSet] = React.useState([]);\r\n  const [ageDataSet, setAgeDataSet] = React.useState([]);\r\n  const [payDataSet, setPayDataSet] = React.useState([]);\r\n  const [chartData, setChartData] = React.useState({});\r\n\r\n  const getData = async () => {\r\n    let age = [];\r\n    let pay = [];\r\n    const res = await axios.get(\r\n      \"http://dummy.restapiexample.com/api/v1/employees\"\r\n    );\r\n    if (res) {\r\n      setDataSet(res.data.data);\r\n      console.log(dataSet);\r\n      for (const i of dataSet) {\r\n        age.push(parseInt(i.employee_age));\r\n        payDataSet.push(parseInt(i.employee_salary));\r\n      }\r\n      setChartData({\r\n        labels: age,\r\n        dataSet: [\r\n          {\r\n            label: \"level of Thinkness\",\r\n            data: pay,\r\n            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n            borderWidth: 4,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      setDataSet([]);\r\n    }\r\n    console.log(pay, age);\r\n  };\r\n\r\n  const getDataBDCL = async () => {\r\n    const res = await axios.get(\r\n      \"https://bdcl-api.herokuapp.com/api/2020/bdcl_students\"\r\n    );\r\n    console.log(res);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // getData();\r\n    getDataBDCL();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"800px\",\r\n        height: \"400px\",\r\n      }}\r\n    >\r\n      <h2>Doughnut Example</h2>\r\n      <Doughnut data={data} />\r\n      <Line data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pie;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\NewContext.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\TheContext\\StateContext.js",["103","104"],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\TheContext\\StateReducer.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\TheHome.js",["105"],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\AddCourse.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\context_api_crud\\src\\NewContextAPI\\NewFIle\\EditCourse.js",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":16,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"112","severity":1,"message":"116","line":8,"column":31,"nodeType":"114","messageId":"115","endLine":8,"endColumn":47},{"ruleId":"112","severity":1,"message":"117","line":11,"column":17,"nodeType":"114","messageId":"115","endLine":11,"endColumn":25},{"ruleId":"112","severity":1,"message":"118","line":11,"column":23,"nodeType":"114","messageId":"115","endLine":11,"endColumn":26},{"ruleId":"112","severity":1,"message":"119","line":14,"column":11,"nodeType":"114","messageId":"115","endLine":14,"endColumn":21},{"ruleId":"112","severity":1,"message":"120","line":15,"column":16,"nodeType":"114","messageId":"115","endLine":15,"endColumn":23},{"ruleId":"121","severity":1,"message":"122","line":67,"column":6,"nodeType":"123","endLine":67,"endColumn":8,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"125","line":16,"column":7,"nodeType":"114","messageId":"115","endLine":16,"endColumn":14},{"ruleId":"112","severity":1,"message":"126","line":45,"column":10,"nodeType":"114","messageId":"115","endLine":45,"endColumn":20},{"ruleId":"112","severity":1,"message":"127","line":45,"column":22,"nodeType":"114","messageId":"115","endLine":45,"endColumn":35},{"ruleId":"112","severity":1,"message":"128","line":46,"column":22,"nodeType":"114","messageId":"115","endLine":46,"endColumn":35},{"ruleId":"112","severity":1,"message":"129","line":49,"column":9,"nodeType":"114","messageId":"115","endLine":49,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"131","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"132","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":20},{"ruleId":"112","severity":1,"message":"117","line":8,"column":17,"nodeType":"114","messageId":"115","endLine":8,"endColumn":25},{"ruleId":"112","severity":1,"message":"133","line":15,"column":9,"nodeType":"114","messageId":"115","endLine":15,"endColumn":25},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'completeStudents' is assigned a value but never used.","'setInput' is assigned a value but never used.","'std' is assigned a value but never used.","'newStudent' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'age', 'data.length', and 'data1'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'newData' is assigned a value but never used.","'ageDataSet' is assigned a value but never used.","'setAgeDataSet' is assigned a value but never used.","'setPayDataSet' is assigned a value but never used.","'getData' is assigned a value but never used.","'Recat' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'editingTheCourse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [age, data.length, data1]",{"range":"139","text":"140"},[1720,1722],"[age, data.length, data1]"]